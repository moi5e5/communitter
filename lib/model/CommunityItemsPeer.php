<?php


/**
 * Skeleton subclass for performing query and update operations on the 'community_items' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Dec  1 10:34:10 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class CommunityItemsPeer extends BaseCommunityItemsPeer
{

    static public function getItems($max = null)
    {
        $criteria   =   new Criteria();
        if($max != null)
        {
            $criteria->setLimit($max);
        }

        return self::doSelect(self::addAvailable($criteria));
    }

    static public function getItemsByUser($user_id)
    {
        $criteria   =   new Criteria();
        $criteria->add(self::USER_ID, $user_id, Criteria::EQUAL);
        return self::doSelect(self::addAvailable($criteria));
    }

    static public function addAvailable(Criteria $criteria)
    {

        return $criteria;

    }

    static public function getLuceneIndex()
    {
      ProjectConfiguration::registerZend();

      if (file_exists($index = self::getLuceneIndexFile()))
      {
        return Zend_Search_Lucene::open($index);
      }
      else
      {
        return Zend_Search_Lucene::create($index);
      }
    }

    static public function getLuceneIndexFile()
    {
      return sfConfig::get('sf_data_dir').'/items.'.sfConfig::get('sf_environment').'.index';
    }

    static public function getForLuceneQuery($query)
    {
      $hits = self::getLuceneIndex()->find($query);

      $pks = array();
      foreach ($hits as $hit)
      {
        $pks[] = $hit->pk;
      }

      $criteria = new Criteria();
      $criteria->add(self::COMMUNITY_ITEMS_ID, $pks, Criteria::IN);
      $criteria->setLimit(10);

      return self::doSelect(self::addAvailable($criteria));
      
    }

} // CommunityItemsPeer
