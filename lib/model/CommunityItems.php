<?php


/**
 * Skeleton subclass for representing a row from the 'community_items' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Dec  1 10:34:10 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class CommunityItems extends BaseCommunityItems {

    /**
     * Initializes internal state of CommunityItems object.
     * @see        parent::__construct()
     */
    public function __construct()
    {
            // Make sure that parent constructor is always invoked, since that
            // is where any default values for this object are set.
            parent::__construct();
    }

    public function __toString()
    {
         return $this->getName();
    }

    public function save(PropelPDO $con = null)
    {

      if (is_null($con))
      {
        $con = Propel::getConnection(JobeetJobPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
      }

      $con->beginTransaction();
      try
      {
        $ret = parent::save($con);

        $this->updateLuceneIndex();

        $con->commit();

        return $ret;
      }
      catch (Exception $e)
      {
        $con->rollBack();
        throw $e;
      }
    }

    public function updateLuceneIndex()
    {
      $index = CommunityItemsPeer::getLuceneIndex();

      if ($hit = $index->find('pk:'.$this->getCommunityItemsId()))
      {
        $index->delete($hit->id);
      }

      $doc = new Zend_Search_Lucene_Document();

      $doc->addField(Zend_Search_Lucene_Field::UnIndexed('pk', $this->getCommunityItemsId()));


      $doc->addField(Zend_Search_Lucene_Field::UnStored('name', $this->getName(), 'utf-8'));
      $doc->addField(Zend_Search_Lucene_Field::UnStored('brief', $this->getBrief(), 'utf-8'));
      $doc->addField(Zend_Search_Lucene_Field::UnStored('tags', $this->getTags(), 'utf-8'));
      $doc->addField(Zend_Search_Lucene_Field::UnStored('content', $this->getContent(), 'utf-8'));


      $index->addDocument($doc);
      $index->commit();
    }

}
